{"version":3,"file":"ngx-file-drop.umd.js","sources":["../../src/ngx-file-drop/ngx-file-drop-entry.ts","../../src/ngx-file-drop/ngx-templates.directive.ts","../../src/ngx-file-drop/ngx-file-drop.component.ts","../../src/ngx-file-drop/ngx-file-drop.module.ts","../../src/ngx-file-drop.ts"],"sourcesContent":["import { FileSystemEntry, FileSystemFileEntry, FileSystemDirectoryEntry } from './dom.types';\n\n/**\n * fileEntry is an instance of {@link FileSystemFileEntry} or {@link FileSystemDirectoryEntry}.\n * Which one is it can be checked using {@link FileSystemEntry.isFile} or {@link FileSystemEntry.isDirectory}\n * properties of the given {@link FileSystemEntry}.\n */\nexport class NgxFileDropEntry {\n    constructor(\n        public relativePath: string,\n        public fileEntry: FileSystemEntry\n    ) {\n    }\n}\n","import { Directive, TemplateRef } from '@angular/core';\n\n@Directive({ selector: '[ngx-file-drop-content-tmp]' })\nexport class NgxFileDropContentTemplateDirective {\n  constructor(public template: TemplateRef<any>) { }\n}\n","import {\n  Component,\n  ContentChild,\n  ElementRef,\n  EventEmitter,\n  Input,\n  NgZone,\n  OnDestroy,\n  Output,\n  Renderer2,\n  TemplateRef,\n  ViewChild\n} from '@angular/core';\nimport { Subscription, timer } from 'rxjs';\n\nimport { NgxFileDropEntry } from './ngx-file-drop-entry';\nimport { FileSystemDirectoryEntry, FileSystemEntry, FileSystemFileEntry } from './dom.types';\nimport { NgxFileDropContentTemplateDirective } from './ngx-templates.directive';\n\n@Component({\n  selector: 'ngx-file-drop',\n  templateUrl: './ngx-file-drop.component.html',\n  styleUrls: ['./ngx-file-drop.component.scss'],\n})\nexport class NgxFileDropComponent implements OnDestroy {\n\n  @Input()\n  public accept: string = '*';\n\n  @Input()\n  public directory: boolean = false;\n\n  @Input()\n  public multiple: boolean = true;\n\n  @Input()\n  public dropZoneLabel: string = '';\n\n  @Input()\n  public dropZoneClassName: string = 'ngx-file-drop__drop-zone';\n\n  @Input()\n  public useDragEnter: boolean = false;\n\n  @Input()\n  public contentClassName: string = 'ngx-file-drop__content';\n\n  @Input()\n  public showBrowseBtn: boolean = false;\n\n  @Input()\n  public browseBtnClassName: string = 'btn btn-primary btn-xs ngx-file-drop__browse-btn';\n\n  @Input()\n  public browseBtnLabel: string = 'Browse files';\n\n  @Output()\n  public onFileDrop: EventEmitter<NgxFileDropEntry[]> = new EventEmitter();\n\n  @Output()\n  public onFileOver: EventEmitter<any> = new EventEmitter();\n\n  @Output()\n  public onFileLeave: EventEmitter<any> = new EventEmitter();\n\n  // custom templates\n  @ContentChild(NgxFileDropContentTemplateDirective, { read: TemplateRef }) contentTemplate: TemplateRef<any>;\n\n  @ViewChild('fileSelector', { static: true })\n  public fileSelector: ElementRef;\n\n  public isDraggingOverDropZone: boolean = false;\n\n  private globalDraggingInProgress: boolean = false;\n  private readonly globalDragStartListener: () => void;\n  private readonly globalDragEndListener: () => void;\n\n  private files: NgxFileDropEntry[] = [];\n  private numOfActiveReadEntries: number = 0;\n\n  private helperFormEl: HTMLFormElement | null = null;\n  private fileInputPlaceholderEl: HTMLDivElement | null = null;\n\n  private dropEventTimerSubscription: Subscription | null = null;\n\n  private _disabled: boolean = false;\n\n  public get disabled(): boolean { return this._disabled; }\n\n  @Input()\n  public set disabled(value: boolean) {\n    this._disabled = (value != null && `${value}` !== 'false');\n  }\n\n  constructor(\n    private zone: NgZone,\n    private renderer: Renderer2\n  ) {\n    this.globalDragStartListener = this.renderer.listen('document', 'dragstart', (evt: Event) => {\n      this.globalDraggingInProgress = true;\n    });\n    this.globalDragEndListener = this.renderer.listen('document', 'dragend', (evt: Event) => {\n      this.globalDraggingInProgress = false;\n    });\n  }\n\n  public ngOnDestroy(): void {\n    if (this.dropEventTimerSubscription) {\n      this.dropEventTimerSubscription.unsubscribe();\n      this.dropEventTimerSubscription = null;\n    }\n    this.globalDragStartListener();\n    this.globalDragEndListener();\n    this.files = [];\n    this.helperFormEl = null;\n    this.fileInputPlaceholderEl = null;\n  }\n\n  public onDragOver(event: Event): void {\n    if (this.useDragEnter) {\n      this.preventAndStop(event);\n    } else if (!this.isDropzoneDisabled() && !this.useDragEnter) {\n      if (!this.isDraggingOverDropZone) {\n        this.isDraggingOverDropZone = true;\n        this.onFileOver.emit(event);\n      }\n      this.preventAndStop(event);\n    }\n  }\n\n  public onDragEnter(event: Event): void {\n    if (!this.isDropzoneDisabled() && this.useDragEnter) {\n      if (!this.isDraggingOverDropZone) {\n        this.isDraggingOverDropZone = true;\n        this.onFileOver.emit(event);\n      }\n      this.preventAndStop(event);\n    }\n  }\n\n  public onDragLeave(event: Event): void {\n    if (!this.isDropzoneDisabled()) {\n      if (this.isDraggingOverDropZone) {\n        this.isDraggingOverDropZone = false;\n        this.onFileLeave.emit(event);\n      }\n      this.preventAndStop(event);\n    }\n  }\n\n  public dropFiles(event: DragEvent): void {\n    if (!this.isDropzoneDisabled()) {\n      this.isDraggingOverDropZone = false;\n      if (event.dataTransfer) {\n        event.dataTransfer.dropEffect = 'copy';\n        let items: FileList | DataTransferItemList;\n        if (event.dataTransfer.items) {\n          items = event.dataTransfer.items;\n        } else {\n          items = event.dataTransfer.files;\n        }\n        this.preventAndStop(event);\n        this.checkFiles(items);\n      }\n    }\n  }\n\n  public openFileSelector = (event?: MouseEvent): void => {\n    if (this.fileSelector && this.fileSelector.nativeElement) {\n      (this.fileSelector.nativeElement as HTMLInputElement).click();\n    }\n  };\n\n  /**\n   * Processes the change event of the file input and adds the given files.\n   * @param Event event\n   */\n  public uploadFiles(event: Event): void {\n    if (!this.isDropzoneDisabled()) {\n      if (event.target) {\n        const items = (event.target as HTMLInputElement).files || ([] as any);\n        this.checkFiles(items);\n        this.resetFileInput();\n      }\n    }\n  }\n\n  private checkFiles(items: FileList | DataTransferItemList): void {\n    for (let i = 0; i < items.length; i++) {\n      const item = items[i];\n      let entry: FileSystemEntry | null = null;\n      if (this.canGetAsEntry(item)) {\n        entry = item.webkitGetAsEntry();\n      }\n\n      if (!entry) {\n        if (item) {\n          const fakeFileEntry: FileSystemFileEntry = {\n            name: (item as File).name,\n            isDirectory: false,\n            isFile: true,\n            file: (callback: (filea: File) => void): void => {\n              callback(item as File);\n            },\n          };\n          const toUpload: NgxFileDropEntry = new NgxFileDropEntry(fakeFileEntry.name, fakeFileEntry);\n          this.addToQueue(toUpload);\n        }\n\n      } else {\n        if (entry.isFile) {\n          const toUpload: NgxFileDropEntry = new NgxFileDropEntry(entry.name, entry);\n          this.addToQueue(toUpload);\n\n        } else if (entry.isDirectory) {\n          this.traverseFileTree(entry, entry.name);\n        }\n      }\n    }\n\n    if (this.dropEventTimerSubscription) {\n      this.dropEventTimerSubscription.unsubscribe();\n    }\n    this.dropEventTimerSubscription = timer(200, 200)\n      .subscribe(() => {\n        if (this.files.length > 0 && this.numOfActiveReadEntries === 0) {\n          const files = this.files;\n          this.files = [];\n          this.onFileDrop.emit(files);\n        }\n      });\n  }\n\n  private traverseFileTree(item: FileSystemEntry, path: string): void {\n    if (item.isFile) {\n      const toUpload: NgxFileDropEntry = new NgxFileDropEntry(path, item);\n      this.files.push(toUpload);\n\n    } else {\n      path = path + '/';\n      const dirReader = (item as FileSystemDirectoryEntry).createReader();\n      let entries: FileSystemEntry[] = [];\n\n      const readEntries = () => {\n        this.numOfActiveReadEntries++;\n        dirReader.readEntries((result) => {\n          if (!result.length) {\n            // add empty folders\n            if (entries.length === 0) {\n              const toUpload: NgxFileDropEntry = new NgxFileDropEntry(path, item);\n              this.zone.run(() => {\n                this.addToQueue(toUpload);\n              });\n\n            } else {\n              for (let i = 0; i < entries.length; i++) {\n                this.zone.run(() => {\n                  this.traverseFileTree(entries[i], path + entries[i].name);\n                });\n              }\n            }\n\n          } else {\n            // continue with the reading\n            entries = entries.concat(result);\n            readEntries();\n          }\n\n          this.numOfActiveReadEntries--;\n        });\n      };\n\n      readEntries();\n    }\n  }\n\n  /**\n   * Clears any added files from the file input element so the same file can subsequently be added multiple times.\n   */\n  private resetFileInput(): void {\n    if (this.fileSelector && this.fileSelector.nativeElement) {\n      const fileInputEl = this.fileSelector.nativeElement as HTMLInputElement;\n      const fileInputContainerEl = fileInputEl.parentElement;\n      const helperFormEl = this.getHelperFormElement();\n      const fileInputPlaceholderEl = this.getFileInputPlaceholderElement();\n\n      // Just a quick check so we do not mess up the DOM (will never happen though).\n      if (fileInputContainerEl !== helperFormEl) {\n        // Insert the form input placeholder in the DOM before the form input element.\n        this.renderer.insertBefore(fileInputContainerEl, fileInputPlaceholderEl, fileInputEl);\n        // Add the form input as child of the temporary form element, removing the form input from the DOM.\n        this.renderer.appendChild(helperFormEl, fileInputEl);\n        // Reset the form, thus clearing the input element of any files.\n        helperFormEl.reset();\n        // Add the file input back to the DOM in place of the file input placeholder element.\n        this.renderer.insertBefore(fileInputContainerEl, fileInputEl, fileInputPlaceholderEl);\n        // Remove the input placeholder from the DOM\n        this.renderer.removeChild(fileInputContainerEl, fileInputPlaceholderEl);\n      }\n    }\n  }\n\n  /**\n   * Get a cached HTML form element as a helper element to clear the file input element.\n   */\n  private getHelperFormElement(): HTMLFormElement {\n    if (!this.helperFormEl) {\n      this.helperFormEl = this.renderer.createElement('form') as HTMLFormElement;\n    }\n\n    return this.helperFormEl;\n  }\n\n  /**\n   * Get a cached HTML div element to be used as placeholder for the file input element when clearing said element.\n   */\n  private getFileInputPlaceholderElement(): HTMLDivElement {\n    if (!this.fileInputPlaceholderEl) {\n      this.fileInputPlaceholderEl = this.renderer.createElement('div') as HTMLDivElement;\n    }\n\n    return this.fileInputPlaceholderEl;\n  }\n\n  private canGetAsEntry(item: any): item is DataTransferItem {\n    return !!item.webkitGetAsEntry;\n  }\n\n  private isDropzoneDisabled(): boolean {\n    return (this.globalDraggingInProgress || this.disabled);\n  }\n\n  private addToQueue(item: NgxFileDropEntry): void {\n    this.files.push(item);\n  }\n\n  private preventAndStop(event: Event): void {\n    event.stopPropagation();\n    event.preventDefault();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgxFileDropComponent } from './ngx-file-drop.component';\nimport { NgxFileDropContentTemplateDirective } from './ngx-templates.directive';\n\n@NgModule({\n  declarations: [\n    NgxFileDropComponent,\n    NgxFileDropContentTemplateDirective,\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    NgxFileDropComponent,\n    NgxFileDropContentTemplateDirective,\n  ],\n  providers: [],\n  bootstrap: [\n    NgxFileDropComponent\n  ],\n})\nexport class NgxFileDropModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["Directive","TemplateRef","EventEmitter","timer","Component","NgZone","Renderer2","Input","Output","ContentChild","ViewChild","NgModule","CommonModule"],"mappings":"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"}