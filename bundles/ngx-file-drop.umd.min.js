!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("rxjs"),require("@angular/common")):"function"==typeof define&&define.amd?define("ngx-file-drop",["exports","@angular/core","rxjs","@angular/common"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self)["ngx-file-drop"]={},e.ng.core,e.rxjs,e.ng.common)}(this,(function(e,t,n,r){"use strict";var i=function(e,t){this.relativePath=e,this.fileEntry=t},o=function(e){this.template=e};o.decorators=[{type:t.Directive,args:[{selector:"[ngx-file-drop-content-tmp]"}]}],o.ctorParameters=function(){return[{type:t.TemplateRef}]};var s=function(){function e(e,n){var r=this;this.zone=e,this.renderer=n,this.accept="*",this.directory=!1,this.multiple=!0,this.dropZoneLabel="",this.dropZoneClassName="ngx-file-drop__drop-zone",this.useDragEnter=!1,this.contentClassName="ngx-file-drop__content",this.showBrowseBtn=!1,this.browseBtnClassName="btn btn-primary btn-xs ngx-file-drop__browse-btn",this.browseBtnLabel="Browse files",this.onFileDrop=new t.EventEmitter,this.onFileOver=new t.EventEmitter,this.onFileLeave=new t.EventEmitter,this.isDraggingOverDropZone=!1,this.globalDraggingInProgress=!1,this.files=[],this.numOfActiveReadEntries=0,this.helperFormEl=null,this.fileInputPlaceholderEl=null,this.dropEventTimerSubscription=null,this._disabled=!1,this.openFileSelector=function(e){r.fileSelector&&r.fileSelector.nativeElement&&r.fileSelector.nativeElement.click()},this.globalDragStartListener=this.renderer.listen("document","dragstart",(function(e){r.globalDraggingInProgress=!0})),this.globalDragEndListener=this.renderer.listen("document","dragend",(function(e){r.globalDraggingInProgress=!1}))}return Object.defineProperty(e.prototype,"disabled",{get:function(){return this._disabled},set:function(e){this._disabled=null!=e&&""+e!="false"},enumerable:!1,configurable:!0}),e.prototype.ngOnDestroy=function(){this.dropEventTimerSubscription&&(this.dropEventTimerSubscription.unsubscribe(),this.dropEventTimerSubscription=null),this.globalDragStartListener(),this.globalDragEndListener(),this.files=[],this.helperFormEl=null,this.fileInputPlaceholderEl=null},e.prototype.onDragOver=function(e){this.useDragEnter?this.preventAndStop(e):this.isDropzoneDisabled()||this.useDragEnter||(this.isDraggingOverDropZone||(this.isDraggingOverDropZone=!0,this.onFileOver.emit(e)),this.preventAndStop(e))},e.prototype.onDragEnter=function(e){!this.isDropzoneDisabled()&&this.useDragEnter&&(this.isDraggingOverDropZone||(this.isDraggingOverDropZone=!0,this.onFileOver.emit(e)),this.preventAndStop(e))},e.prototype.onDragLeave=function(e){this.isDropzoneDisabled()||(this.isDraggingOverDropZone&&(this.isDraggingOverDropZone=!1,this.onFileLeave.emit(e)),this.preventAndStop(e))},e.prototype.dropFiles=function(e){if(!this.isDropzoneDisabled()&&(this.isDraggingOverDropZone=!1,e.dataTransfer)){e.dataTransfer.dropEffect="copy";var t=void 0;t=e.dataTransfer.items?e.dataTransfer.items:e.dataTransfer.files,this.preventAndStop(e),this.checkFiles(t)}},e.prototype.uploadFiles=function(e){if(!this.isDropzoneDisabled()&&e.target){var t=e.target.files||[];this.checkFiles(t),this.resetFileInput()}},e.prototype.checkFiles=function(e){for(var t=this,r=function(t){var n=e[t],r=null;if(o.canGetAsEntry(n)&&(r=n.webkitGetAsEntry()),r)if(r.isFile){l=new i(r.name,r);o.addToQueue(l)}else r.isDirectory&&o.traverseFileTree(r,r.name);else if(n){var s={name:n.name,isDirectory:!1,isFile:!0,file:function(e){e(n)}},l=new i(s.name,s);o.addToQueue(l)}},o=this,s=0;s<e.length;s++)r(s);this.dropEventTimerSubscription&&this.dropEventTimerSubscription.unsubscribe(),this.dropEventTimerSubscription=n.timer(200,200).subscribe((function(){if(t.files.length>0&&0===t.numOfActiveReadEntries){var e=t.files;t.files=[],t.onFileDrop.emit(e)}}))},e.prototype.traverseFileTree=function(e,t){var n=this;if(e.isFile){var r=new i(t,e);this.files.push(r)}else{t+="/";var o=e.createReader(),s=[],l=function(){n.numOfActiveReadEntries++,o.readEntries((function(r){if(r.length)s=s.concat(r),l();else if(0===s.length){var o=new i(t,e);n.zone.run((function(){n.addToQueue(o)}))}else for(var a=function(e){n.zone.run((function(){n.traverseFileTree(s[e],t+s[e].name)}))},p=0;p<s.length;p++)a(p);n.numOfActiveReadEntries--}))};l()}},e.prototype.resetFileInput=function(){if(this.fileSelector&&this.fileSelector.nativeElement){var e=this.fileSelector.nativeElement,t=e.parentElement,n=this.getHelperFormElement(),r=this.getFileInputPlaceholderElement();t!==n&&(this.renderer.insertBefore(t,r,e),this.renderer.appendChild(n,e),n.reset(),this.renderer.insertBefore(t,e,r),this.renderer.removeChild(t,r))}},e.prototype.getHelperFormElement=function(){return this.helperFormEl||(this.helperFormEl=this.renderer.createElement("form")),this.helperFormEl},e.prototype.getFileInputPlaceholderElement=function(){return this.fileInputPlaceholderEl||(this.fileInputPlaceholderEl=this.renderer.createElement("div")),this.fileInputPlaceholderEl},e.prototype.canGetAsEntry=function(e){return!!e.webkitGetAsEntry},e.prototype.isDropzoneDisabled=function(){return this.globalDraggingInProgress||this.disabled},e.prototype.addToQueue=function(e){this.files.push(e)},e.prototype.preventAndStop=function(e){e.stopPropagation(),e.preventDefault()},e}();s.decorators=[{type:t.Component,args:[{selector:"ngx-file-drop",template:'<div [className]="dropZoneClassName"\n     [class.ngx-file-drop__drop-zone--over]="isDraggingOverDropZone"\n     (drop)="dropFiles($event)"\n     (dragover)="onDragOver($event)"\n     (dragenter)="onDragEnter($event)"\n     (dragleave)="onDragLeave($event)">\n  <div [className]="contentClassName">\n    <input \n      type="file" \n      #fileSelector \n      [accept]="accept" \n      [attr.directory]="directory || undefined" \n      [attr.webkitdirectory]="directory || undefined"\n      [attr.mozdirectory]="directory || undefined"\n      [attr.msdirectory]="directory || undefined"\n      [attr.odirectory]="directory || undefined"\n      [multiple]="multiple"\n      (change)="uploadFiles($event)" \n      class="ngx-file-drop__file-input" \n    />\n\n    <ng-template #defaultContentTemplate>\n      <div *ngIf="dropZoneLabel" class="ngx-file-drop__drop-zone-label">{{dropZoneLabel}}</div>\n      <div *ngIf="showBrowseBtn">\n        <input type="button" [className]="browseBtnClassName" value="{{browseBtnLabel}}" (click)="openFileSelector($event)" />\n      </div>\n    </ng-template>\n\n    <ng-template\n      [ngTemplateOutlet]="contentTemplate || defaultContentTemplate"\n      [ngTemplateOutletContext]="{ openFileSelector: openFileSelector }">\n    </ng-template>\n  </div>\n</div>\n',styles:[".ngx-file-drop__drop-zone{border:2px dotted #0782d0;border-radius:30px;height:100px;margin:auto}.ngx-file-drop__drop-zone--over{background-color:hsla(0,0%,57.6%,.5)}.ngx-file-drop__content{align-items:center;color:#0782d0;display:flex;height:100px;justify-content:center}.ngx-file-drop__drop-zone-label{text-align:center}.ngx-file-drop__file-input{display:none}"]}]}],s.ctorParameters=function(){return[{type:t.NgZone},{type:t.Renderer2}]},s.propDecorators={accept:[{type:t.Input}],directory:[{type:t.Input}],multiple:[{type:t.Input}],dropZoneLabel:[{type:t.Input}],dropZoneClassName:[{type:t.Input}],useDragEnter:[{type:t.Input}],contentClassName:[{type:t.Input}],showBrowseBtn:[{type:t.Input}],browseBtnClassName:[{type:t.Input}],browseBtnLabel:[{type:t.Input}],onFileDrop:[{type:t.Output}],onFileOver:[{type:t.Output}],onFileLeave:[{type:t.Output}],contentTemplate:[{type:t.ContentChild,args:[o,{read:t.TemplateRef}]}],fileSelector:[{type:t.ViewChild,args:["fileSelector",{static:!0}]}],disabled:[{type:t.Input}]};var l=function(){};l.decorators=[{type:t.NgModule,args:[{declarations:[s,o],imports:[r.CommonModule],exports:[s,o],providers:[],bootstrap:[s]}]}],e.NgxFileDropComponent=s,e.NgxFileDropContentTemplateDirective=o,e.NgxFileDropEntry=i,e.NgxFileDropModule=l,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=ngx-file-drop.umd.min.js.map